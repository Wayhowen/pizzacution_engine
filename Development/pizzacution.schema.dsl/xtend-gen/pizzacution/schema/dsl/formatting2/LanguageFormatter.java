/**
 * generated by Xtext 2.26.0
 */
package pizzacution.schema.dsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import pizzacution.schema.Pizza;
import pizzacution.schema.PizzaPlace;
import pizzacution.schema.dsl.services.LanguageGrammarAccess;

@SuppressWarnings("all")
public class LanguageFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private LanguageGrammarAccess _languageGrammarAccess;
  
  protected void _format(final PizzaPlace pizzaPlace, @Extension final IFormattableDocument document) {
    EList<Pizza> _pizzasAvailable = pizzaPlace.getPizzasAvailable();
    for (final Pizza pizza : _pizzasAvailable) {
      document.<Pizza>format(pizza);
    }
  }
  
  public void format(final Object pizzaPlace, final IFormattableDocument document) {
    if (pizzaPlace instanceof XtextResource) {
      _format((XtextResource)pizzaPlace, document);
      return;
    } else if (pizzaPlace instanceof PizzaPlace) {
      _format((PizzaPlace)pizzaPlace, document);
      return;
    } else if (pizzaPlace instanceof EObject) {
      _format((EObject)pizzaPlace, document);
      return;
    } else if (pizzaPlace == null) {
      _format((Void)null, document);
      return;
    } else if (pizzaPlace != null) {
      _format(pizzaPlace, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(pizzaPlace, document).toString());
    }
  }
}
