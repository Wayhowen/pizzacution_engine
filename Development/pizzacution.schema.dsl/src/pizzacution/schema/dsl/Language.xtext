// automatically generated by Xtext
grammar pizzacution.schema.dsl.Language with org.eclipse.xtext.common.Terminals

import "http://www.example.org/schema" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

PizzaPlace returns PizzaPlace:
	{PizzaPlace}
	'PizzaPlace'
	name=EString
	'{'
		('address' address=EString)?
		('pizzasAvailable' '{' pizzasAvailable+=Pizza ( "," pizzasAvailable+=Pizza)* '}' )?
	'}';



EString returns ecore::EString:
	STRING | ID;

Pizza returns Pizza:
	(hasLactose?='hasLactose')?
	(isVegetarian?='isVegetarian')?
	(isVegan?='isVegan')?
	'Pizza'
	name=EString
	'{'
		('calories' calories=EInt)?
		('carbohydrates' carbohydrates=EFloat)?
		('proteins' proteins=EFloat)?
		('fat' fat=EFloat)?
		('price' price=EInt)?
		('size' size=Sizes)?
		('sauce' sauce=Sauces)?
		('dough' dough=DoughTypes)?
		('toppings' '(' toppings+=[Topping|EString] ( "," toppings+=[Topping|EString])* ')' )?
		'soldIn' '(' soldIn+=[PizzaPlace|EString] ( "," soldIn+=[PizzaPlace|EString])* ')' 
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Topping returns Topping:
	{Topping}
	(hasLactose?='hasLactose')?
	(isVegetarian?='isVegetarian')?
	(isVegan?='isVegan')?
	'Topping'
	name=EString
	'{'
		('calories' calories=EInt)?
		('carbohydrates' carbohydrates=EFloat)?
		('proteins' proteins=EFloat)?
		('fat' fat=EFloat)?
		('foodGroup' foodGroup=FoodGroup)?
		('toppingAmount' toppingAmount=ToppingAmount)?
		('pizza' '(' pizza+=[Pizza|EString] ( "," pizza+=[Pizza|EString])* ')' )?
	'}';

enum Sizes returns Sizes:
				Small = 'Small' | Medium = 'Medium' | Large = 'Large' | ExtraLarge = 'ExtraLarge';

enum Sauces returns Sauces:
				BBQ = 'BBQ' | Tomato = 'Tomato' | Garlic = 'Garlic';

enum DoughTypes returns DoughTypes:
				NewHavenStyle = 'NewHavenStyle' | StLouisStyle = 'StLouisStyle' | Neapolitan = 'Neapolitan' | NewYorkStyle = 'NewYorkStyle';

enum FoodGroup returns FoodGroup:
				vegetables = 'vegetables' | meats = 'meats' | chseeses = 'chseeses';

enum ToppingAmount returns ToppingAmount:
				small = 'small' | normal = 'normal' | large = 'large';
